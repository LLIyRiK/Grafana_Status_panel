{"version":3,"sources":["../src/status_ctrl.js"],"names":["MetricsPanelCtrl","_","TimeSeries","coreModule","StatusPluginCtrl","$scope","$injector","$log","$filter","annotationsSrv","filter","aggregations","events","on","onRender","bind","postRefresh","onDataError","onDataReceived","onInitEditMode","each","panel","targets","target","datasource","matchArgs","replace","match","args","split","alias","undefined","measurements","hide","duplicates","m","res","measurement","length","addEditorTab","$panelContainer","find","css","$panelContoller","height","setElementHeight","clusterName","displayName","RegExp","namePrefix","crit","warn","display","series","s","thresholds","parseThresholds","inverted","url","value","aggregation","max","datapoints","point","min","display_value","push","removeClass","addClass","parseUri","links","uri","dashUri","params","dataList","map","seriesHandler","render","seriesData","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"status_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from \"app/plugins/sdk\";\r\nimport \"app/plugins/panel/graph/legend\";\r\nimport \"app/plugins/panel/graph/series_overrides_ctrl\";\r\nimport _ from \"lodash\";\r\nimport TimeSeries from \"app/core/time_series2\";\r\nimport coreModule from \"app/core/core_module\"\r\n\r\nimport './css/status_panel.css!';\r\n\r\nexport class StatusPluginCtrl extends MetricsPanelCtrl {\r\n  /** @ngInject */\r\n  constructor($scope, $injector, $log, $filter, annotationsSrv) {\r\n    super($scope, $injector);\r\n\r\n    //this.log = $log.debug;\r\n    this.filter = $filter;\r\n\r\n    this.aggregations = ['None', 'Max', 'Min', 'Sum'];\r\n\r\n    /** Bind events to functions **/\r\n    this.events.on('render', this.onRender.bind(this));\r\n    this.events.on('refresh', this.postRefresh.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n  }\r\n\r\n  postRefresh() {\r\n    //generate alias from query string\r\n    _.each(this.panel.targets, (target) => {\r\n      switch (this.panel.datasource) {\r\n        case \"Grafite\":\r\n          let matchArgs = target.target\r\n                  .replace(/((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/)|(\\s))/mg,'')\r\n                  .match(/alias\\s*[^\\(]*\\(\\s*([^]*)\\)/m) || [];\r\n          let args = (matchArgs[1] || \"\").replace(/\\((.+)\\)/g, \"\").split(/,/) || [];\r\n          target.alias = args[1] ? args[1].replace(/'/g, \"\") : undefined;\r\n          break;\r\n      }\r\n\r\n    });\r\n\r\n    this.measurements = _.filter(this.panel.targets, (target) => {\r\n      return target.alias && !target.hide;\r\n    });\r\n\r\n    /** Duplicate alias validation **/\r\n    this.duplicates = false;\r\n\r\n    _.each(this.measurements, (m) => {\r\n      var res = _.filter(this.measurements, (measurement) => {\r\n        return m.alias == measurement.alias;\r\n      });\r\n\r\n      if (res.length > 1) {\r\n        this.duplicates = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Options', 'public/plugins/vonage-status-panel/editor.html', 2);\r\n  }\r\n\r\n  setElementHeight() {\r\n    this.$panelContainer.find('.status-panel').css('height', this.$panelContoller.height + 'px');\r\n  }\r\n\r\n  onRender() {\r\n    this.setElementHeight();\r\n\r\n    if (this.panel.clusterName) {\r\n      this.panel.displayName =\r\n        this.filter('interpolateTemplateVars')(this.panel.clusterName, this.$scope)\r\n          .replace(new RegExp(this.panel.namePrefix, 'i'), '');\r\n    } else {\r\n      this.panel.displayName = \"\";\r\n    }\r\n\r\n\r\n\r\n    let targets = this.panel.targets;\r\n\r\n    this.crit = [];\r\n    this.warn = [];\r\n    this.display = [];\r\n\r\n    _.each(this.series, (s) => {\r\n      let target = _.find(targets, (target) => {\r\n        return target.alias == s.alias;\r\n      });\r\n\r\n      if (!target) {\r\n        return;\r\n      }\r\n\r\n      s.thresholds = StatusPluginCtrl.parseThresholds(target);\r\n      s.inverted = s.thresholds.crit < s.thresholds.warn;\r\n      s.display = target.display;\r\n      s.url = target.url;\r\n\r\n      let value;\r\n\r\n      switch (target.aggregation) {\r\n        case 'Max':\r\n          value = _.max(s.datapoints, (point) => { return point[0]; })[0];\r\n          break;\r\n        case 'Min':\r\n          value = _.min(s.datapoints, (point) => { return point[0]; })[0];\r\n          break;\r\n        case 'Sum':\r\n          value = 0;\r\n          _.each(s.datapoints, (point) => { value += point[0] });\r\n          break;\r\n        default:\r\n          value = s.datapoints[0][0];\r\n      }\r\n\r\n      s.display_value = value;\r\n\r\n      if (!s.inverted) {\r\n        if (value >= s.thresholds.crit) {\r\n          this.crit.push(s);\r\n        } else if (value >= s.thresholds.warn) {\r\n          this.warn.push(s);\r\n        } else if (s.display) {\r\n          this.display.push(s);\r\n        }\r\n      } else {\r\n        if (value <= s.thresholds.crit) {\r\n          this.crit.push(s);\r\n        } else if (value <= s.thresholds.warn) {\r\n          this.warn.push(s);\r\n        } else if (s.display) {\r\n          s.display_value = value;\r\n          this.display.push(s);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.$panelContainer.removeClass('error-state warn-state ok-state');\r\n\r\n    if (this.crit.length > 0) {\r\n      //this.$panelContainer.css('background-color', \"red\");\r\n      this.$panelContainer.addClass('error-state');\r\n    } else if (this.warn.length > 0) {\r\n      //this.$panelContainer.css('background-color', \"orange\");\r\n      this.$panelContainer.addClass('warn-state');\r\n    } else {\r\n      //this.$panelContainer.css('background-color', \"green\");\r\n      this.$panelContainer.addClass('ok-state');\r\n    }\r\n\r\n    this.parseUri();\r\n  }\r\n\r\n  parseUri() {\r\n    if (this.panel.links && this.panel.links.length > 0) {\r\n      this.uri = this.panel.links[0].dashUri + \"?\" + this.panel.links[0].params;\r\n    } else {\r\n      this.uri = undefined;\r\n    }\r\n  }\r\n\r\n  static parseThresholds(measurement) {\r\n    let res = {};\r\n\r\n    res.warn = measurement.warn;\r\n    res.crit = measurement.crit;\r\n\r\n    return res;\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    this.series = dataList.map(this.seriesHandler.bind(this));\r\n\r\n    this.render();\r\n  }\r\n\r\n  onDataError() {\r\n    this.crit = [];\r\n    this.warn = [];\r\n  }\r\n\r\n  seriesHandler(seriesData) {\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints,\r\n      alias: seriesData.target\r\n    });\r\n\r\n    //series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n\r\n    return series;\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    this.$panelContainer = elem.find('.panel-container');\r\n    this.$panelContoller = ctrl;\r\n  }\r\n}\r\n\r\nStatusPluginCtrl.templateUrl = 'module.html';\r\n"]}